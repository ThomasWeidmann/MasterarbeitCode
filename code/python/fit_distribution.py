import numpy as np
import pandas as pd
import seaborn as sns
from fitter import Fitter, get_common_distributions, get_distributions
import matplotlib.pyplot as plt

values = [400000,396023,392063,388004,384014,380112,376255,372467,368682,364943,361314,357755,354080,350445,346855,343339,339885,336480,333029,329738,326335,322942,319812,316511,313345,310276,307129,304058,301075,298070,295137,292148,289224,286516,283729,280965,278213,275412,272703,270082,267249,264524,261902,259354,256696,254119,251480,248915,246386,243916,241399,239006,236610,234333,232005,229717,227454,225159,222876,220569,218397,216204,214037,211909,209828,207764,205701,203690,201661,199661,197727,195777,193861,191957,189993,188139,186267,184312,182485,180748,178984,177206,175535,173810,172141,170388,168715,167009,165385,163682,162052,160403,158820,157250,155667,154176,152623,151108,149576,148093,146616,145120,143645,142209,140820,139425,138007,136639,135279,133876,132511,131155,129849,128600,127305,126053,124790,123505,122272,121115,119873,118649,117472,116317,115169,114070,112924,111775,110620,109514,108369,107263,106218,105197,104101,103055,102027,101021,100012,99079,98077,97109,96188,95253,94316,93352,92443,91494,90531,89597,88679,87763,86869,86019,85186,84286,83427,82617,81775,80921,80125,79296,78545,77752,76948,76145,75366,74642,73907,73180,72436,71709,70970,70277,69595,68883,68219,67561,66925,66246,65638,64979,64332,63657,62980,62345,61702,61074,60471,59884,59276,58684,58082,57508,56922,56388,55832,55263,54655,54112,53557,53025,52499,51965,51442,50932,50432,49923,49423,48943,48449,47987,47488,47026,46554,46098,45611,45134,44655,44211,43779,43384,42974,42515,42095,41691,41272,40863,40477,40050,39668,39278,38869,38434,38051,37646,37319,36939,36590,36215,35846,35525,35166,34805,34458,34119,33803,33462,33130,32819,32502,32175,31875,31560,31261,30945,30650,30339,30028,29756,29472,29186,28902,28609,28327,28058,27749,27438,27131,26884,26616,26328,26067,25808,25545,25278,25019,24783,24547,24321,24080,23812,23567,23326,23078,22825,22624,22386,22173,21921,21705,21492,21247,21034,20791,20573,20385,20195,19966,19777,19562,19366,19169,18970,18788,18612,18436,18281,18107,17934,17763,17563,17387,17211,17068,16914,16753,16590,16414,16250,16074,15920,15762,15596,15421,15293,15156,15017,14858,14692,14539,14387,14249,14104,13981,13823,13677,13542,13401,13267,13114,12992,12862,12740,12613,12478,12366,12239,12137,12023,11892,11780,11655,11538,11406,11278,11162,11058,10948,10825,10715,10625,10528,10414,10326,10245,10155,10048,9940,9853,9731,9630,9518,9430,9336,9237,9162,9088,9011,8920,8839,8751,8664,8571,8478,8393,8312,8238,8149,8071,7993,7913,7831,7752,7683,7622,7551,7477,7392,7319,7252,7163,7090,7022,6949,6876,6810,6726,6646,6577,6508,6450,6389,6334,6278,6218,6149,6087,6029,5986,5929,5875,5819,5760,5702,5659,5608,5549,5492,5441,5382,5321,5273,5220,5154,5104,5057,5002,4964,4920,4870,4819,4776,4730,4682,4639,4590,4548,4503,4470,4425,4373,4337,4294,4254,4213,4172,4120,4072,4030,3999,3971,3933,3886,3847,3822,3789,3756,3703,3658,3620,3585,3560,3518,3474,3437,3401,3361,3332,3297,3259,3221,3192,3160,3126,3104,3065,3039,3011,2984,2960,2929,2902,2871,2843,2807,2774,2744,2731,2709,2683,2655,2632,2599,2566,2542,2520,2494,2477,2455,2428,2406,2389,2350,2330,2308,2289,2271,2242,2220,2200,2178,2159,2148,2130,2115,2085,2066,2040,2023,2001,1979,1960,1942,1930,1907,1894,1879,1858,1845,1831,1810,1794,1782,1759,1741,1729,1711,1698,1682,1660,1646,1630,1621,1603,1586,1570,1554,1539,1519,1509,1497,1487,1470,1459,1447,1428,1412,1401,1390,1377,1361,1350,1337,1326,1315,1298,1291,1276,1261,1249,1232,1219,1206,1198,1192,1174,1163,1156,1136,1123,1109,1099,1086,1079,1074,1062,1048,1042,1037,1029,1013,1000,989,985,979,973,962,951,942,929,921,908,899,886,877,866,863,859,851,835,827,815,808,802,801,793,788,785,776,760,754,748,739,727,716,708,701,697,690,683,675,668,662,657,653,645,637,628,620,614,609,604,601,596,593,589,585,577,573,568,565,559,550,549,544,537,535,532,525,523,520,517,510,506,499,496,487,480,477,469,464,461,455,452,452,447,446,442,432,428,424,419,413,407,407,399,395,389,382,379,374,370,362,362,357,354,350,346,341,338,335,331,327,325,323,321,317,313,312,306,305,304,301,297,295,293,288,288,286,284,280,273,267,265,260,258,258,253,250,247,244,243,243,243,243,239,237,236,231,228,223,221,218,213,210,208,207,203,201,200,198,196,196,195,193,193,190,188,187,186,186,184,181,179,178,174,171,170,168,164,164,162,159,158,156,154,153,150,150,149,146,145,141,141,140,139,139,137,134,134,132,130,129,125,124,124,124,123,122,120,120,119,118,116,114,114,113,112,111,110,110,108,108,106,105,105,104,103,102,102,100,99,99,96,95,93,92,90,88,87,87,86,85,85,84,83,82,81,81,81,80,80,80,79,79,78,78,77,75,74,74,73,73,73,72,72,70,70,70,70,69,69,69,69,69,68,67,67,66,65,65,63,63,63,61,60,59,59,59,59,58,55,52,52,50,48,48,48,47,47,47,47,47,46,46,46,46,46,46,46,46,44,43,43,43,43,43,42,42,42,42,42,42,41,41,41,40,39,39,39,37,36,36,36,36,36,36,36,36,36,35,35,35,35,35,35,35,35,34,33,33,33,33,33,33,33,33,33,32,32,32,32,32,32,32,30,30,30,30,30,29,29,28,28,28,28,28,28,28,28,28,28,27,27,26,26,26,26,25,25,25,25,25,25,25,25,25,25,24,24,24,24,23,23,23,23,23,23,23,23,23,23,21,21,21,21,20,20,20,20,20,20,19,19,19,19,18,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,14,14,14,14,14,14,14,14,14,14,13,13,13,13,13,13,13,12,12,12,12,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,9,9,9,9,8,8,8,8,7,7,7,7,7,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1]
x = [i for i in range(len(values))]

#dataset = pd.DataFrame({'Column1': x, 'Column2': values})
#print(dataset.head())
#print(dataset.info())

all_distributions = ['alpha', 'anglit', 'arcsine', 'argus', 'beta', 'betaprime', 'bradford', 'burr', 'burr12', 'cauchy', 'chi', 'chi2', 'cosine', 'crystalball', 'dgamma', 'dweibull', 'erlang', 'expon', 'exponnorm', 'exponpow', 'exponweib', 'f', 'fatiguelife', 'fisk', 'foldcauchy', 'foldnorm', 'frechet_l', 'frechet_r', 'gamma', 'gausshyper', 'genexpon', 'genextreme', 'gengamma', 'genhalflogistic', 'geninvgauss', 'genlogistic', 'gennorm', 'genpareto', 'gilbrat', 'gompertz', 'gumbel_l', 'gumbel_r', 'halfcauchy', 'halfgennorm', 'halflogistic', 'halfnorm',
'hypsecant', 'invgamma', 'invgauss', 'invweibull', 'johnsonsb', 'johnsonsu', 'kappa3', 'kappa4', 'ksone', 'kstwo', 'kstwobign', 'laplace', 'levy', 'levy_l', 'levy_stable', 'loggamma', 'logistic', 'loglaplace', 'lognorm', 'loguniform', 'lomax', 'maxwell', 'mielke', 'moyal', 'nakagami', 'ncf', 'nct', 'ncx2',
'norm', 'norminvgauss', 'pareto', 'pearson3', 'powerlaw', 'powerlognorm', 'powernorm', 'rayleigh', 'rdist', 'recipinvgauss', 'reciprocal', 'rice', 'rv_continuous', 'rv_histogram', 'semicircular', 'skewnorm', 't', 'trapz', 'triang', 'truncexpon', 'truncnorm', 'tukeylambda', 'uniform', 'vonmises', 'vonmises_line', 'wald', 'weibull_max', 'weibull_min', 'wrapcauchy']

some_distributions = ['gamma',
                          'lognorm',
                          "beta",
                          "burr",
                          "norm"]

f = Fitter(values,
           distributions= some_distributions)
f.fit()
print(f.summary())
print(f.get_best(method = 'sumsquare_error'))